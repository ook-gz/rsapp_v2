
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.11.0
 * Query Engine version: b371888aaf8f51357c7457d836b86d12da91658b
 */
Prisma.prismaVersion = {
  client: "3.11.0",
  engine: "b371888aaf8f51357c7457d836b86d12da91658b"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.HabitacionesScalarFieldEnum = makeEnum({
  id_hab: 'id_hab',
  num_hab: 'num_hab',
  tipo_hab: 'tipo_hab'
});

exports.Prisma.HuespedesScalarFieldEnum = makeEnum({
  id_huesped: 'id_huesped',
  nm_huesped: 'nm_huesped',
  ap_pat: 'ap_pat',
  ap_mat: 'ap_mat',
  fecha_llegada: 'fecha_llegada',
  num_acomp: 'num_acomp',
  correo: 'correo',
  id_hab: 'id_hab',
  passwrd: 'passwrd',
  id_rol: 'id_rol'
});

exports.Prisma.IncidenciasScalarFieldEnum = makeEnum({
  id_incidencia: 'id_incidencia',
  descripcion: 'descripcion',
  asunto: 'asunto'
});

exports.Prisma.ItemsScalarFieldEnum = makeEnum({
  id_item: 'id_item',
  nm_item: 'nm_item',
  cantidad_exist: 'cantidad_exist'
});

exports.Prisma.PedidosScalarFieldEnum = makeEnum({
  id_pedido: 'id_pedido',
  estado: 'estado',
  tipo_pedido: 'tipo_pedido'
});

exports.Prisma.PersonalScalarFieldEnum = makeEnum({
  id_personal: 'id_personal',
  nm_prsnl: 'nm_prsnl',
  ap_pat: 'ap_pat',
  ap_mat: 'ap_mat',
  id_rol: 'id_rol'
});

exports.Prisma.RolesScalarFieldEnum = makeEnum({
  id_rol: 'id_rol',
  rol: 'rol'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});
exports.tipo_hab = makeEnum({
  individual: 'individual',
  familiar: 'familiar',
  matrimonial: 'matrimonial'
});

exports.asunto = makeEnum({
  personal: 'personal',
  instalaciones: 'instalaciones'
});

exports.estado = makeEnum({
  entregado: 'entregado',
  en_proceso: 'en_proceso',
  recibido: 'recibido'
});

exports.tipo_pedido = makeEnum({
  items: 'items',
  limpieza: 'limpieza'
});

exports.rol = makeEnum({
  huesped: 'huesped',
  hotelAdmin: 'hotelAdmin',
  superAdmin: 'superAdmin'
});

exports.Prisma.ModelName = makeEnum({
  habitaciones: 'habitaciones',
  huespedes: 'huespedes',
  incidencias: 'incidencias',
  items: 'items',
  pedidos: 'pedidos',
  personal: 'personal',
  roles: 'roles'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
